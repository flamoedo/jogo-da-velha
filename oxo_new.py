# -*- coding: utf-8 -*-
"""OXO.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1bC5i9gsNFomLKhaPHNKsyls8uTfpNT5j
"""

import numpy as np
import random
import pandas as pd

def check_lin(game):
  game = game.reshape(3,3)
  for mark in ['O','X']:
    for lin in range(3):  
      if (game == mark)[lin,].sum() == 3:
        return 2
    
  return 0

def check_col(game):
  game = game.reshape(3,3)
  for mark in ['O','X']:
    for col in range(3):  
      if (game == mark)[:,col].sum() == 3:
        return 2
    
  return 0

def check_diag1(game):  
  game = game.reshape(3,3)
  for mark in ('O','X'):
    s = 0
    for lin in range(3):  
      s += (game == mark)[lin,lin]
  if s == 3:
      return 2
  else:
      return 0

def check_diag2(game):
  game = game.reshape(3,3)
  for mark in ['O','X']:
    s = 0
    for lin in range(3):  
      s += (game == mark)[2-lin,lin]
  if s == 3:
      return 2
  else:
      return 0

def check_tied(game):
  game = game.reshape(3,3)
  if (game != '').sum() == 9:
    return 1
  else:
    return 0

def check_game(game):
  a = check_lin(game)
  b = check_col(game)
  c = check_diag1(game)
  d = check_diag2(game)
  e = check_tied(game)
  
  if a == 2:
    return a
  
  if b == 2:
    return b
  
  if c == 2:
    return c
  
  if d == 2:
    return d
  
  if e == 1:
    return e
  
  return 0

def play_game(game, mark):
  
  while(True):
  
    col = random.randint(0,8)

    if game[col] == '':      
      game[col] = mark
      return col

def iteration(inumber):
  OXO = np.array(['','','','','','','','',''])

  data_game = []

  r = False

  while(not r):
    for mark in ('X', 'O'):
      OXOc = OXO.copy()
      y = play_game(OXO, mark)
      c = check_game(OXO)
      r = c > 0
      
      a = np.append(OXOc, [mark, y, c, inumber])
      
      data_game.append(a)
      if r:
        break        
        
  for q in data_game:
    if q[9] == mark or c == 1 :
      q[11] = c

  return data_game

if __name__ == "__main__":    

  Q = []

  for i in range(1000):
    data_game = iteration(i)  
          
    for g in data_game:      
      Q.append(g)


  pd.DataFrame(Q).to_csv('Q_table.csv')


